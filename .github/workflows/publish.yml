on:
  push:
    tags:
    - 'v*'
name: Build Release
jobs:
  create_release:
    name: Create release for new version
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release Notes
          draft: true
          prerelease: false
  release-linux-amd64:
    name: release for linux/amd64
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Prepare qshell
        run: |
          set -e
          wget -qLO /tmp/qshell-v2.11.0-linux-amd64.tar.gz https://devtools.qiniu.com/qshell-v2.11.0-linux-amd64.tar.gz
          tar xf /tmp/qshell-v2.11.0-linux-amd64.tar.gz
          ./qshell account -- "$PUBLISH_ACCESS_KEY" "$PUBLISH_SECRET_KEY" default
        env:
          PUBLISH_ACCESS_KEY: ${{ secrets.PUBLISH_ACCESS_KEY }}
          PUBLISH_SECRET_KEY: ${{ secrets.PUBLISH_SECRET_KEY }}
      - name: Generate file
        run: |
          set -e
          mkdir build
          dd if=/dev/urandom of="./build/kodo-browser-linux-x64-${{ steps.vars.outputs.tag }}.zip" bs=16M count=10
      - name: Upload Release Asset to Qiniu
        run: |
          set -e
          ./qshell rput --resumable-api-v2 --overwrite "$PUBLISH_BUCKET_NAME" "kodo-browser-Linux-x64-${{ steps.vars.outputs.tag }}.zip" "./build/kodo-browser-linux-x64-${{ steps.vars.outputs.tag }}.zip"
        env:
          PUBLISH_BUCKET_NAME: ${{ secrets.PUBLISH_BUCKET_NAME }}
      - name: Upload Release Asset to Github Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./build/kodo-browser-linux-x64-${{ steps.vars.outputs.tag }}.zip
          asset_name: kodo-browser-linux-x64-${{ steps.vars.outputs.tag }}.zip
          asset_content_type: application/zip
  release-win-amd64:
    name: release for win/amd64
    runs-on: windows-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
        shell: bash
      - name: Prepare qshell
        run: |
          set -e
          curl -s -o ./qshell-v2.11.0-windows-amd64.zip https://devtools.qiniu.com/qshell-v2.11.0-windows-amd64.zip
          unzip ./qshell-v2.11.0-windows-amd64.zip
          ./qshell account -- "$PUBLISH_ACCESS_KEY" "$PUBLISH_SECRET_KEY" default
        env:
          PUBLISH_ACCESS_KEY: ${{ secrets.PUBLISH_ACCESS_KEY }}
          PUBLISH_SECRET_KEY: ${{ secrets.PUBLISH_SECRET_KEY }}
        shell: bash
      - name: Generate file
        run: |
          set -e
          mkdir build
          dd if=/dev/urandom of="./build/kodo-browser-win32-x64-${{ steps.vars.outputs.tag }}.zip" bs=16M count=10
        shell: bash
      - name: Upload Release Asset to Qiniu
        run: |
          set -e
          ./qshell.exe rput --resumable-api-v2 --overwrite "$PUBLISH_BUCKET_NAME" "kodo-browser-win32-x64-${{ steps.vars.outputs.tag }}.zip" "./build/kodo-browser-win32-x64-${{ steps.vars.outputs.tag }}.zip"
        shell: bash
        env:
          PUBLISH_BUCKET_NAME: ${{ secrets.PUBLISH_BUCKET_NAME }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./build/kodo-browser-win32-x64-${{ steps.vars.outputs.tag }}.zip
          asset_name: kodo-browser-win32-x64-${{ steps.vars.outputs.tag }}.zip
          asset_content_type: application/zip
